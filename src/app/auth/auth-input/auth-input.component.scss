@use '../../styles/helpers' as *;


.adTextBox > :is(input:focus, input.hasValue) ~ span {
  color: rgba(0,0,0, 0.96);
}

.adTextBox > :is(input:focus, input.hasValue) ~ label {
  translate: 0 rem(-30);
  color: var(--secondary-color);
}

.adTextBox > :is(input:focus, input.hasValue) ~ .underline {
  transform: scaleX(1);
  background-color: var(--secondary-color);
}

.adTextBox > :is(input:focus, input.hasValue) ~ .materialSymbols {
  transform: scaleX(1);
  color: var(--secondary-color);
}


.adTextBox > span {
  top: 50%;
  left: 0;
}

.adTextBox > label {
  top: 40%;
  left: 0;
  white-space: nowrap;
}

.adTextBox > input {
  font-size: rem(16);
  font-weight: 400;
  text-align: left;


  outline: none;
  height: rem(48);
  width: 100%;
  color: black !important;
  border: 0;
  border-bottom: rem(1) solid rgba(0,0,0, 0.5);
  background: transparent;
  color: rgba(255,255,255, 0.96);
}

.adTextBox > :is(input:focus, input.hasValue) {
  width: 100%
}

.adTextBox {
  position: relative;
  margin-bottom: rem(20);
}

.adTextBox > .underline {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  height: rem(2);
  background: var(--color-blue-500);
  transform: scaleX(0);
  transition: 0.35s;
}

.adTextBox > span,
.adTextBox > label {

  font-weight: 400;
  line-height: rem(24);
  letter-spacing: 0em;
  text-align: left;

  position: absolute;
  font-size: rem(16);
  pointer-events: none;
  color: rgba(0,0,0, 0.5);
  transition: 0.35s;
}

.materialSymbols {
  color:rgba(0,0,0, 0.5) ;
}

.inputContainer {
  display: flex;
}


.eyeContainer {
  position: absolute;
  right: 0;
  bottom: rem(5);
  cursor: pointer;
}

